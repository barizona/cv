tinytex::reinstall_tinytex(repository = "illinois")
install.packages("googlesheets4")
#| echo: false
#| message: false
#| warning: false
# read google sheet
library(googlesheets4)
library(dplyr)
pub_tab <- read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
pub_tab <- read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
pub_tab
pub_tab <- read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
pub_tab
pub_tab$Nr_published_papers[1]
View(pub_tab)
colnames(pub_tab)
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
# Convert to data.frame and set the first column as row names
pub_tab <- as.data.frame(pub_tab)
rownames(pub_tab) <- pub_tab[[1]]  # Set the first column as row names
pub_tab
row.names(pub_tab) <- pub_tab[[1]]  # Set the first column as row names
pub_tab[[1]]
pub_tab[, 1]
row.names(pub_tab) <- pub_tab[, 1]  # Set the first column as row names
#| echo: false
#| message: false
#| warning: false
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
# Convert to data.frame and set the first column as row names
pub_tab <- as.data.frame(pub_tab)
row.names(pub_tab) <- pub_tab[, 1]  # Set the first column as row names
pub_tab <- pub_tab[, -1]           # Remove the first column after setting row names
pub_tab$IF["ID_27"]
pub_tab$IF
pub_tab["ID_27", "IF"]
pub_tab["ID_27", "IC"]
pub_tab$h_index[1]
colnames(pub_tab)
pub_tab
pub_tab[-1, ]
#| echo: false
#| message: false
#| warning: false
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
# Convert to data.frame and set the first column as row names
pub_tab <- as.data.frame(pub_tab)
row.names(pub_tab) <- pub_tab[, 1]  # Set the first column as row names
pub_tab <- pub_tab[, -1]           # Remove the first column after setting row names
# format the table
format_publication <- function(paper, Q, IF, IC) {
paste0(
"- ", paper, " (", Q, ", IF: ", IF, ", Independent Citations: ", IC, ")"
)
}
format_publication <- function(paper, Q, IF, IC) {
paste0(
"- ", paper, " (", Q, ", IF: ", IF, ", Independent Citations: ", IC, ")"
)
}
pub_list <- apply(pub_tab[-1, ], 1, function(row) {
format_publication(row["paper"], row["Q"], row["IF"], row["IC"])
})
pub_listist
pub_list
#| echo: false
#| message: false
#| warning: false
#| results: asis
# format the table function
format_publication <- function(authors, year, title, journal, volume, Q, IF, IC, note) {
paste0(
"- ", authors, " (", year, ") ", title, " **", journal, "**,", volume,
" **", Q, ", IF: ", IF, ", IC: ", IC, note, "**"
)
}
#| echo: false
#| message: false
#| warning: false
#| results: asis
# format the table function
format_publication <- function(authors, year, title, journal, volume, Q, IF, IC, note) {
paste0(
"- ", authors, " (", year, ") ", title, " **", journal, "**,", volume,
" **", Q, ", IF: ", IF, ", IC: ", IC, note, "**"
)
}
# Generate formatted publication list
pub_list <- apply(pub_tab[-1, ], 1, function(row) {
format_publication(row["authors"], row["year"], row["title"], row["journal"],
row["volume"], row["Q"], row["IF"], row["IC"], row["note"])
})
# Print the publication list
cat(paste(pub_list, collapse = "\n"))
#| echo: false
#| message: false
#| warning: false
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
#| echo: false
#| message: false
#| warning: false
#| results: asis
# format the table function
format_publication <- function(authors, year, title, journal, volume, Q, IF, IC, note) {
paste0(
"- ", authors, " (", year, ") ", title, " **", journal, "**,", volume,
" **", Q, ", IF: ", IF, ", IC: ", IC, note, "**"
)
}
# Generate formatted publication list
pub_list <- apply(pub_tab[-1, ], 1, function(row) {
format_publication(row["authors"], row["year"], row["title"], row["journal"],
row["volume"], row["Q"], row["IF"], row["IC"], row["note"])
})
# Print the publication list
cat(paste(pub_list, collapse = "\n"))
#| echo: false
#| message: false
#| warning: false
#| results: asis
library(dplyr)
pub_tab
View(pub_tab)
# Generate formatted publication list
pub_tab_unpublished <- pub_tab %>%
# unpublished
filter(published == "no")
pub_tab_unpublished
#| echo: false
#| message: false
#| warning: false
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
View(pub_tab)
#| echo: false
#| message: false
#| warning: false
#| results: asis
library(dplyr)
# format the table function
format_publication_unpublished <- function(authors, year, title, journal,
volume, note) {
# Add note only if it is not NA
note_part <- if(!is.na(note)) paste0(" ", note) else ""
paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
".", note_part)}
# Generate formatted publication list
pub_tab_unpublished <- pub_tab %>%
# unpublished
filter(published == "no")
pub_list_unpublished <- apply(pub_tab_unpublished, 1, function(row) {
format_publication_unpublished(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["note"])})
# Print the publication list
cat(paste(pub_list_unpublished, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
#| results: asis
# format the table function
# format_publication_published <- function(authors, year, title, journal, volume,
#                                          Q, IF, IC, note) {
#   # Add note only if it is not NA
#   note_part <- if(!is.na(note)) paste0(" ", note) else ""
#   paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
#     ". **", Q, ", IF: ", IF, ", IC: ", IC, note_part, "**")}
# format the table function
format_publication_published <- function(authors, year, title, journal, volume,
Q, IF, IC, note, important) {
# Add note only if it is not NA
note_part <- if (!is.na(note)) paste0(" ", note) else ""
# Apply green colour styling if important is "yes"
text <- paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
". **", Q, ", IF: ", IF, ", IC: ", IC, note_part, "**")
if (important == "yes") {
text <- paste0("<span style='color: green;'>", text, "</span>")
}
return(text)
}
# Generate formatted publication list
pub_tab_published <- pub_tab %>%
# unpublished
filter(published == "yes")
pub_list_published <- apply(pub_tab_published, 1, function(row) {
format_publication_published(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["Q"],
row["IF"], row["IC"], row["note"],
row["important"])})
#| echo: false
#| message: false
#| warning: false
#| results: asis
# Format the table function
format_publication_published <- function(authors, year, title, journal, volume,
Q, IF, IC, note, important) {
# Add note only if it is not NA
note_part <- if (!is.na(note)) paste0(" ", note) else ""
# Apply green color styling if important is "yes"
text <- paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
". **", Q, ", IF: ", IF, ", IC: ", IC, note_part, "**")
# Check for "important" being "yes" while handling NA
if (!is.na(important) && important == "yes") {
text <- paste0("<span style='color: green;'>", text, "</span>")
}
return(text)
}
# Generate formatted publication list
pub_tab_published <- pub_tab %>%
# Filter for published
filter(published == "yes")
pub_list_published <- apply(pub_tab_published, 1, function(row) {
format_publication_published(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["Q"],
row["IF"], row["IC"], row["note"], row["important"])
})
# Print the publication list
cat(paste(pub_list_published, collapse = "\n\n"))
library("quarto")
install.packages("quarto")
install.packages("hunspell")
#| echo: false
#| message: false
#| warning: false
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
# # Convert to data.frame and set the first column as row names
# pub_tab <- as.data.frame(pub_tab)
# row.names(pub_tab) <- pub_tab[, 1]  # Set the first column as row names
# pub_tab <- pub_tab[, -1]           # Remove the first column after setting row names
#| echo: false
#| message: false
#| warning: false
#| results: asis
library(dplyr)
# format the table function
format_publication_unpublished <- function(authors, year, title, journal,
volume, note) {
# Add note only if it is not NA
note_part <- if(!is.na(note)) paste0(" ", note) else ""
paste0("- ", authors, " (", year, ") ", title, " *", journal, "*, ", volume,
".", note_part)}
# Generate formatted publication list
pub_tab_unpublished <- pub_tab %>%
# unpublished
filter(published == "no")
pub_list_unpublished <- apply(pub_tab_unpublished, 1, function(row) {
format_publication_unpublished(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["note"])})
# Print the publication list
cat(paste(pub_list_unpublished, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
#| results: asis
# Format the table function
format_publication_published <- function(authors, year, title, journal, volume,
Q, IF, IC, note, important) {
# Add note only if it is not NA
note_part <- if (!is.na(note)) paste0(" ", note) else ""
# Apply green color styling if important is "yes"
text <- paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
". **", Q, ", IF: ", IF, ", IC: ", IC, note_part, "**")
# Check for "important" being "yes" while handling NA
if (!is.na(important) && important == "yes") {
text <- paste0("- ", "<span style='color: #00ab44;'>", text, "</span>")
} else {
text <- paste0("- ", text)
}
return(text)
}
# Generate formatted publication list
pub_tab_published <- pub_tab %>%
# Filter for published
filter(published == "yes")
pub_list_published <- apply(pub_tab_published, 1, function(row) {
format_publication_published(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["Q"],
row["IF"], row["IC"], row["note"],
row["important"])})
# Print the publication list
cat(paste(pub_list_published, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
# # Convert to data.frame and set the first column as row names
# pub_tab <- as.data.frame(pub_tab)
# row.names(pub_tab) <- pub_tab[, 1]  # Set the first column as row names
# pub_tab <- pub_tab[, -1]           # Remove the first column after setting row names
#| echo: false
#| message: false
#| warning: false
#| results: asis
library(dplyr)
# format the table function
format_publication_unpublished <- function(authors, year, title, journal,
volume, note) {
# Add note only if it is not NA
note_part <- if(!is.na(note)) paste0(" ", note) else ""
paste0("- ", authors, " (", year, ") ", title, " *", journal, "*, ", volume,
".", note_part)}
# Generate formatted publication list
pub_tab_unpublished <- pub_tab %>%
# unpublished
filter(published == "no")
pub_list_unpublished <- apply(pub_tab_unpublished, 1, function(row) {
format_publication_unpublished(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["note"])})
# Print the publication list
cat(paste(pub_list_unpublished, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
#| results: asis
# Format the table function
format_publication_published <- function(authors, year, title, journal, volume,
Q, IF, IC, note, important) {
# Add note only if it is not NA
note_part <- if (!is.na(note)) paste0(" ", note) else ""
# Apply green color styling if important is "yes"
text <- paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
". **", Q, ", IF: ", IF, ", IC: ", IC, note_part, "**")
# Check for "important" being "yes" while handling NA
if (!is.na(important) && important == "yes") {
text <- paste0("- ", "<span style='color: #00ab44;'>", text, "</span>")
} else {
text <- paste0("- ", text)
}
return(text)
}
# Generate formatted publication list
pub_tab_published <- pub_tab %>%
# Filter for published
filter(published == "yes")
pub_list_published <- apply(pub_tab_published, 1, function(row) {
format_publication_published(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["Q"],
row["IF"], row["IC"], row["note"],
row["important"])})
# Print the publication list
cat(paste(pub_list_published, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
#| results: asis
library(dplyr)
# format the table function
format_publication_unpublished <- function(authors, year, title, journal,
volume, note) {
# Add note only if it is not NA
note_part <- if(!is.na(note)) paste0(" ", note) else ""
paste0("- ", authors, " (", year, ") ", title, " *", journal, "*, ", volume,
".", note_part)}
# Generate formatted publication list
pub_tab_unpublished <- pub_tab %>%
# unpublished
filter(published == "no")
pub_list_unpublished <- apply(pub_tab_unpublished, 1, function(row) {
format_publication_unpublished(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["note"])})
# Print the publication list
cat(paste(pub_list_unpublished, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
options(googlesheets4.timeout = 60)
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
#| echo: false
#| message: false
#| warning: false
options(googlesheets4.timeout = 60)
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
#| echo: false
#| message: false
#| warning: false
#| results: asis
library(dplyr)
# format the table function
format_publication_unpublished <- function(authors, year, title, journal,
volume, note) {
# Add note only if it is not NA
note_part <- if(!is.na(note)) paste0(" ", note) else ""
paste0("- ", authors, " (", year, ") ", title, " *", journal, "*, ", volume,
".", note_part)}
# Generate formatted publication list
pub_tab_unpublished <- pub_tab %>%
# unpublished
filter(published == "no")
pub_list_unpublished <- apply(pub_tab_unpublished, 1, function(row) {
format_publication_unpublished(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["note"])})
# Print the publication list
cat(paste(pub_list_unpublished, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
#| results: asis
# Format the table function
format_publication_published <- function(authors, year, title, journal, volume,
Q, IF, IC, note, important) {
# Add note only if it is not NA
note_part <- if (!is.na(note)) paste0(" ", note) else ""
# Apply green color styling if important is "yes"
text <- paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
". **", Q, ", IF: ", IF, ", IC: ", IC, note_part, "**")
# Check for "important" being "yes" while handling NA
if (!is.na(important) && important == "yes") {
text <- paste0("- ", "<span style='color: #00ab44;'>", text, "</span>")
} else {
text <- paste0("- ", text)
}
return(text)
}
# Generate formatted publication list
pub_tab_published <- pub_tab %>%
# Filter for published
filter(published == "yes")
pub_list_published <- apply(pub_tab_published, 1, function(row) {
format_publication_published(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["Q"],
row["IF"], row["IC"], row["note"],
row["important"])})
# Print the publication list
cat(paste(pub_list_published, collapse = "\n\n"))
View(pub_tab_published)
pub_tab_published
#| echo: false
#| message: false
#| warning: false
#| results: asis
# Format the table function
format_publication_published <- function(authors, year, title, journal, volume,
Q, IF, IC, note, important) {
# Bold specific authors (add more names to the list if needed)
authors_to_bold <- c("Ari E", "Ari E\*")
for (name in authors_to_bold) {
authors <- gsub(name, paste0("**", name, "**"), authors, fixed = TRUE)
}
# Add note only if it is not NA
note_part <- if (!is.na(note)) paste0(" ", note) else ""
# Apply green color styling if important is "yes"
text <- paste0(authors, " (", year, ") ", title, " *", journal, "*, ", volume,
". **", Q, ", IF: ", IF, ", IC: ", IC, note_part, "**")
# Check for "important" being "yes" while handling NA
if (!is.na(important) && important == "yes") {
text <- paste0("- ", "<span style='color: #00ab44;'>", text, "</span>")
} else {
text <- paste0("- ", text)
}
return(text)
}
# Generate formatted publication list
pub_tab_published <- pub_tab %>%
# Filter for published
filter(published == "yes")
pub_list_published <- apply(pub_tab_published, 1, function(row) {
format_publication_published(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["Q"],
row["IF"], row["IC"], row["note"],
row["important"])})
# Print the publication list
cat(paste(pub_list_published, collapse = "\n\n"))
#| echo: false
#| message: false
#| warning: false
options(googlesheets4.timeout = 60)
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
#| echo: false
#| message: false
#| warning: false
#| results: asis
library(dplyr)
# format the table function
format_publication_unpublished <- function(authors, year, title, link, journal,
volume, note) {
# Bold specific authors
authors_to_bold <- c("Ari E")
for (name in authors_to_bold) {
authors <- gsub(name, paste0("**", name, "**"), authors, fixed = TRUE)
}
# Add note only if it is not NA
note_part <- if(!is.na(note)) paste0(" ", note) else ""
# Markdown link if not empty
if (!is.na(link) && nzchar(link)) {
title <- paste0("[", title, "](", link, ")")}
paste0("- ", authors, " (", year, ") ", title, " *", journal, "*, ", volume,
".", note_part)
}
# Generate formatted publication list
pub_tab_unpublished <- pub_tab %>%
# unpublished
filter(published == "no")
pub_list_unpublished <- apply(pub_tab_unpublished, 1, function(row) {
format_publication_unpublished(row["authors"], row["year"], row["title"],
row["journal"], row["volume"], row["note"])})
# Print the publication list
cat(paste(pub_list_unpublished, collapse = "\n\n"))
View(pub_tab)
quarto render
#| echo: false
#| message: false
#| warning: false
options(googlesheets4.timeout = 60)
# read google sheet
pub_tab <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/13qXhW8yNd6KSlE3Taaus-cBUx7O0XkFCkw_IGgVTWNo/edit?usp=sharing")
